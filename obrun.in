#!/bin/sh

if test -z "$XDG_CACHE_HOME";
then
     XDG_CACHE_HOME=~/.cache
fi

if test -z "$XDG_CONFIG_HOME";
then
     XDG_CONFIG_HOME=~/.config
fi

if test -z "$XDG_DATA_HOME";
then
    XDG_DATA_HOME=~/.local/share
fi
install -d $XDG_CACHE_HOME $XDG_CONFIG_HOME $XDG_DATA_HOME

export TEXTDOMAIN=obrun
export TEXTDOMAINDIR=@prefix@/share/locale
_()
{
    which gettext >/dev/null 2>&1 && gettext "$@" || echo "$@"
}

for prog in gettext perl zenity;
do
    if ! which $prog >/dev/null 2>&1;
    then
        printf "`_ 'WARNING: %s not found. obrun may not work correctly.\n'`" "$prog" >&2
    fi
done

show_dialog()
{
    if test -f $XDG_CACHE_HOME/obrun.lock;
    then
        _ 'Another instance of obrun is already running' >&2
        exit
    fi
    touch $XDG_CACHE_HOME/obrun.lock

    local prog=$(cat $histfile | xargs zenity --title "`_ 'Runâ€¦'`" --text "`_ 'Select or enter a program to run'`" --height `get_setting height 60` --width `get_setting width 80` --`get_setting type` `get_setting arguments`)
    exitcode=$?

    # OK
    if test $exitcode -eq 0;
    then
        if test "$command" == "remove";
        then
            remove_entry "$prog"
        else
            add_entry "$prog"
        fi
    fi
    rm -f $XDG_CACHE_HOME/obrun.lock
    exit $exitcode
}

add_entry()
{
    entry=$1

    if test -n "$entry";
    then
        if ! grep "^$entry\$" "$histfile" >/dev/null;
        then
            echo "$entry" >> "$histfile"
        fi

        if test "$command" != "add";
        then
            $SHELL -c "$entry &"
        fi
    fi
}

remove_entry()
{
    entry=$1
    perl -e '$m=`cat '$histfile'`; $m=~s/'$entry'\n//; print $m;' > $XDG_CACHE_HOME/.tmp
    if test $? -eq 0;
    then
        mv -f $XDG_CACHE_HOME/.tmp $histfile
    fi
}

get_setting()
{
    setting=$1
    default=$2
    lines=`wc -l "$histfile" | cut -d ' ' -f 1`
    e=`xmllint --xpath "obrun_config/dialog/$setting$lines/text()" "$configfile"`
    if test $? -eq 0;
    then
        echo $e
    else
        e=`xmllint --xpath "obrun_config/dialog/$setting/text()" "$configfile"`
        if test $? -eq 0;
        then
            echo $e
        else
            echo $default
        fi
    fi
}

create_config()
{
    indent="    "
    echo "<obrun_config>"
    echo "$indent<dialog>"
    echo "$indent$indent<height>60</height>"
    echo "$indent$indent<width>80</width>"
    echo "$indent$indent<type>entry</type>"
    echo "$indent$indent<arguments> </arguments>"
    echo "$indent$indent<arguments1>--entry-text</arguments1>"
    echo "$indent</dialog>"
    echo "</obrun_config>"
}

test -f $XDG_CACHE_HOME/openbox/obrun.history && \
    mv $XDG_CACHE_HOME/openbox/obrun.history $XDG_CACHE_HOME/obrun.history
histfile=$XDG_CACHE_HOME/obrun.history
if test ! -f "$histfile";
then
    touch "$histfile"
fi

test -f $XDG_CONFIG_HOME/openbox/obrun.xml && \
    mv $XDG_CONFIG_HOME/openbox/obrun.xml $XDG_CONFIG_HOME/obrun.xml
configfile=$XDG_CONFIG_HOME/obrun.xml
if test ! -f "$configfile";
then
    create_config > "$configfile"
fi

for opt in $@;
do
    case $opt in
        *-h*|*-u*)
            echo "obrun [add|remove]";
            exit
            ;;
        *-v*)
            echo "@version@"
            exit
            ;;
    esac
done

show_dialog
