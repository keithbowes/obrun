#!/bin/sh

_()
{
    if which gettext.sh >/dev/null;
    then
        . gettext.sh
        export TEXTDOMAIN=obrun
        export TEXTDOMAINDIR=@prefix@/share/locale
        eval_gettext "$1"
    else
        echo "$1"
    fi
}

for prog in gettext zenity;
do
    if ! which $prog >/dev/null 2>&1;
    then
        printf "`_ 'WARNING: %s not found. obrun may not work correctly.'`\n" "$prog" >&2
    fi
done

show_simple()
{
    local prog=`zenity --title "\`_ 'Run…'\`" --text "\`_ \"Enter a program to run\"\`" --entry`
    if test -n "$prog";
    then
        /bin/sh -c "$prog &"
    fi
}

show_list_menu()
{
    test -n "$XDG_DATA_HOME" || XDG_DATA_HOME=~/.local/share
    local data_dirs=$XDG_DATA_HOME:${XDG_DATA_DIRS:-/usr/local/share/:/usr/share/}:
    local prog=`ls \`echo $data_dirs | sed -e 's:\::/applications/*.desktop :g'\` | grep -o '[^/]\+$' | sort | uniq | xargs zenity --text "\`_ 'Select a program to run out of the list'\`" --title "\`_ 'Run…'\`" --list --column "\`_ 'Available programs'\`"`
    if test -n "$prog";
    then
        gtk-launch "$prog"
    fi
}

show_path_menu()
{
    # Using grep, which is faster than using: -exec basename '{}' \;
    # but is probably less accurate
    local prog=`find -L \`echo $PATH | tr ':' '\n' | sed -e 's/$/\/*/g'\` -prune -type f \( -perm -u=x -o -perm -g=x -o -perm -o=x \) | grep -o '[^/]\+$' | sort | uniq | xargs zenity --text "\`_ 'Select a program to run out of the list'\`" --title "\`_ 'Run…'\`" --list --column "\`_ 'Available programs'\`"`
    if test -n "$prog";
    then
        /bin/sh -c "$prog &"
    fi
}

ago=l
for opt in $@;
do
    case $opt in
        l*)
            ago=l
            ;;
        p*)
            ago=p
            ;;
        s*)
            ago=s
            ;;
        *-h*|*-u*)
            printf "`_ '%s [action] [option]'`\n" "$0"
            printf "`_ 'actions:
list
  choose from a list of the programs with desktop entries
path
  choose from a list of programs available in your path
simple
  produces a simple run dialog
'`"
            echo
            printf "`_ 'options:
-h         Show this help
-v         Display the version
'`"
            echo
            exit
            ;;
        *-v*)
            echo "@version@"
            exit
            ;;
    esac
done

case $ago in
    l)
        show_list_menu
        ;;
    p)
        show_path_menu
        ;;
    s)
        show_simple
        ;;
esac
